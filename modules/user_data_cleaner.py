#!/usr/bin/env python3
# modules/user_data_cleaner.py
# –ú–æ–¥—É–ª—å –¥–ª—è –≤—ã–±–æ—Ä–æ—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

import os
import shutil
import subprocess
from settings import SERVER_WG_NIC # SERVER_WG_NIC –∏–∑ —Ñ–∞–π–ª–∞ params
from settings import USER_DB_PATH # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
from settings import SERVER_CONFIG_FILE
from settings import SERVER_BACKUP_CONFIG_FILE

WG_USERS_JSON = "logs/wg_users.json"

def confirm_action(message):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
    while True:
        choice = input(f"{message} (y/n): ").strip().lower()
        if choice in {"y", "n"}:
            return choice == "y"
        print("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 'y' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ 'n' –¥–ª—è –æ—Ç–º–µ–Ω—ã.")


def clean_user_data():
    """–í—ã–±–æ—Ä–æ—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º."""
    try:
        # –û—á–∏—Å—Ç–∫–∞ user_records.json
        if os.path.exists(USER_DB_PATH) and confirm_action("üßπ –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª user_records.json?"):
            os.remove(USER_DB_PATH)
            print(f"‚úÖ {USER_DB_PATH} –æ—á–∏—â–µ–Ω.")

        # –û—á–∏—Å—Ç–∫–∞ wg_users.json
        if os.path.exists(WG_USERS_JSON) and confirm_action("üßπ –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª wg_users.json?"):
            os.remove(WG_USERS_JSON)
            print(f"‚úÖ {WG_USERS_JSON} –æ—á–∏—â–µ–Ω.")

        # –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard
        if os.path.exists(SERVER_CONFIG_FILE) and confirm_action("üßπ –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ ### Client –∏ [Peer])?"):
            # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
            shutil.copy2(SERVER_CONFIG_FILE, SERVER_BACKUP_CONFIG_FILE)
            print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {SERVER_BACKUP_CONFIG_FILE}")

            # –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            with open(SERVER_CONFIG_FILE, "r") as wg_file:
                lines = wg_file.readlines()

            # –ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑ –±–ª–æ–∫–æ–≤ ### Client –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö [Peer]
            cleaned_lines = []
            inside_client_block = False

            for line in lines:
                stripped_line = line.strip()
                if stripped_line.startswith("### Client"):
                    inside_client_block = True
                elif inside_client_block and stripped_line == "":
                    # –ö–æ–Ω–µ—Ü –±–ª–æ–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥
                    inside_client_block = False
                elif not inside_client_block:
                    cleaned_lines.append(line)

            with open(SERVER_CONFIG_FILE, "w") as wg_file:
                wg_file.writelines(cleaned_lines)
            print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WireGuard –æ—á–∏—â–µ–Ω–∞.")

        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è WireGuard

        sync_command = f'wg syncconf "{SERVER_WG_NIC}" <(wg-quick strip "{SERVER_WG_NIC}")'
        subprocess.run(sync_command, shell=True, check=True, executable='/bin/bash')
        print(f"WireGuard —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ {SERVER_WG_NIC}")

        print("üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")