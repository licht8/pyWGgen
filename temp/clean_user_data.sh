#!/bin/bash
# clean_user_data.sh
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–±–æ—Ä–æ—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è WireGuard

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
BASE_DIR="/root/pyWGgen/wg_qr_generator"
USER_RECORDS_JSON="$BASE_DIR/user/data/user_records.json"
WG_USERS_JSON="$BASE_DIR/logs/wg_users.json"
WG_CONF="/etc/wireguard/wg0.conf"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
check_file_exists() {
    if [[ ! -f "$1" ]]; then
        echo "‚ùå –§–∞–π–ª $1 –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
}

# –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
clear_user_records() {
    echo -n "üßπ –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª user_records.json? (y/n): "
    read -r choice
    if [[ "$choice" == "y" ]]; then
        echo "{}" > "$USER_RECORDS_JSON"
        echo "‚úÖ user_records.json –æ—á–∏—â–µ–Ω."
    else
        echo "‚è≠Ô∏è –û—á–∏—Å—Ç–∫–∞ user_records.json –ø—Ä–æ–ø—É—â–µ–Ω–∞."
    fi
}

clear_wg_users() {
    echo -n "üßπ –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª wg_users.json? (y/n): "
    read -r choice
    if [[ "$choice" == "y" ]]; then
        echo "{}" > "$WG_USERS_JSON"
        echo "‚úÖ wg_users.json –æ—á–∏—â–µ–Ω."
    else
        echo "‚è≠Ô∏è –û—á–∏—Å—Ç–∫–∞ wg_users.json –ø—Ä–æ–ø—É—â–µ–Ω–∞."
    fi
}

# –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard
clear_wireguard_conf() {
    echo -n "üßπ –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ [Peer])? (y/n): "
    read -r choice
    if [[ "$choice" == "y" ]]; then
        check_file_exists "$WG_CONF"
        
        # –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        cp "$WG_CONF" "${WG_CONF}.bak"
        echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${WG_CONF}.bak"

        # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        sed -i '/^\[Peer\]/,$d' "$WG_CONF"
        echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WireGuard –æ—á–∏—â–µ–Ω–∞."
    else
        echo "‚è≠Ô∏è –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard –ø—Ä–æ–ø—É—â–µ–Ω–∞."
    fi
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã WireGuard
restart_wireguard() {
    echo -n "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å WireGuard? (y/n): "
    read -r choice
    if [[ "$choice" == "y" ]]; then
        systemctl restart wg-quick@wg0
        if [[ $? -eq 0 ]]; then
            echo "‚úÖ WireGuard —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω."
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ WireGuard!"
            exit 1
        fi
    else
        echo "‚è≠Ô∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ WireGuard –ø—Ä–æ–ø—É—â–µ–Ω."
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
main() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—ã–±–æ—Ä–æ—á–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è WireGuard..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    check_file_exists "$USER_RECORDS_JSON"
    check_file_exists "$WG_USERS_JSON"
    check_file_exists "$WG_CONF"

    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
    clear_user_records
    clear_wg_users
    clear_wireguard_conf
    restart_wireguard

    echo "üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã."
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
main
