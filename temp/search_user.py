#!/usr/bin/env python3
# search_user.py
## –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ IP-–∞–¥—Ä–µ—Å—É —Å —á–∞—Å—Ç–∏—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º.

import os
import json
from datetime import datetime

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USER_RECORDS_PATH = os.path.join("user", "data", "user_records.json")

def search_user(search_term):
    """
    –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –∏–º–µ–Ω–∏ –∏–ª–∏ IP.
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        search_term (str): –°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        str: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
    """
    if not os.path.exists(USER_RECORDS_PATH):
        return "‚ùå –§–∞–π–ª user_records.json –Ω–µ –Ω–∞–π–¥–µ–Ω."

    try:
        with open(USER_RECORDS_PATH, "r") as f:
            user_data = json.load(f)

        result = []
        for username, details in user_data.items():
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ IP
            if search_term.lower() in username.lower() or search_term in details.get("address", ""):
                created_at = details.get("created_at", "N/A")
                expires_at = details.get("expires_at", "N/A")
                address = details.get("address", "N/A")

                # –†–∞—Å—Å—á—ë—Ç –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
                try:
                    expires_datetime = datetime.fromisoformat(expires_at)
                    remaining_time = expires_datetime - datetime.now()
                    remaining_days = remaining_time.days
                    remaining_str = f"{remaining_days} –¥–Ω–µ–π" if remaining_days > 0 else "–ò—Å—Ç–µ–∫"
                except ValueError:
                    remaining_str = "–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è"

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                user_info = (
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n"
                    f"   üìÖ –°–æ–∑–¥–∞–Ω: {created_at}\n"
                    f"   ‚è≥ –ò—Å—Ç–µ–∫–∞–µ—Ç: {expires_at}\n"
                    f"   ‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {remaining_str}\n"
                    f"   üåê –ê–¥—Ä–µ—Å: {address}"
                )
                result.append(user_info)

        if not result:
            return "‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."

        return "\n\n".join(result)

    except json.JSONDecodeError:
        return "‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ user_records.json. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ —Ñ–æ—Ä–º–∞—Ç."
    except Exception as e:
        return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"
